[versions]
kotlin = "2.0.0"
kotlinx-coroutines = "1.9.0"
kotlinx-serialization = "1.7.3"
spring-boot = "3.4.5"
spring-cloud = "4.2.2"
hibernate = "7.0.0.CR1"
postgres = "42.7.5"
jmh = "1.37"
jmh-plugin = "0.7.3"

[libraries]
# kotlin
kotlinx-coroutines-core = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-test = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-test", version.ref = "kotlinx-coroutines" }
kotlinx-serialization-json = { group = "org.jetbrains.kotlinx", name = "kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
kotlin-reflect = { group = "org.jetbrains.kotlin", name = "kotlin-reflect" }

# plugins dependency
kotlin-jvm = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
kotlin-serialization = { module = "org.jetbrains.kotlin:kotlin-serialization", version.ref = "kotlin" }
kotlin-spring = { module = "org.jetbrains.kotlin.plugin.spring:org.jetbrains.kotlin.plugin.spring.gradle.plugin", version = "2.2.0-Beta1" }
kotlin-allopen = { module = "org.jetbrains.kotlin:kotlin-allopen", version.ref = "kotlin"}
jmh = { module = "me.champeau.jmh:me.champeau.jmh.gradle.plugin", version.ref = "jmh-plugin" }
dependency-managment = { module = "io.spring.gradle:dependency-management-plugin", version = "1.1.7" }
spring-boot = { module = "org.springframework.boot:spring-boot-gradle-plugin", version.ref = "spring-boot" }
hibernate = { module = "org.hibernate.orm:hibernate-gradle-plugin", version.ref = "hibernate" }

# jmh
jmh-core = { group = "org.openjdk.jmh", name = "jmh-core", version.ref = "jmh" }
jmh-generator-annprocess = { group = "org.openjdk.jmh", name = "jmh-generator-annprocess", version.ref = "jmh" }

# spring
# annotation processor
spring-boot-configuration-processor = { group = "org.springframework.boot", name = "spring-boot-configuration-processor" }

# metrics
spring-boot-starter-actuator = { group = "org.springframework.boot", name = "spring-boot-starter-actuator" }
micrometr-registry-prometheus = { module = "io.micrometer:micrometer-registry-prometheus" }

# data
spring-boot-startet-data-jpa = { group = "org.springframework.boot", name = "spring-boot-starter-data-jpa" }
spring-boot-starter-data-redis = { group = "org.springframework.boot", name = "spring-boot-starter-data-redis" }
spring-data-envers = { group = "org.springframework.data", name = "spring-data-envers" }
liquibase-core = { group = "org.liquibase", name = "liquibase-core" }
postgresql = { group = "org.postgresql", name = "postgresql" }

# io
spring-boot-starter-quartz = { group = "org.springframework.boot", name = "spring-boot-starter-quartz" }
spring-boot-starter-kafka = { group = "org.springframework.kafka", name = "spring-kafka" }

# web
spring-boot-starter-web = { group = "org.springframework.boot", name = "spring-boot-starter-web" }

# test
spring-boot-starter-test = { group = "org.springframework.boot", name = "spring-boot-starter-test" }
spring-kafka-test = { group = "org.springframework.kafka", name = "spring-kafka-test" }

# common
spring-boot-docker-compose = { group = "org.springframework.boot", name = "spring-boot-docker-compose" }
spring-boot-devtools = { group = "org.springframework.boot", name = "spring-boot-devtools" }

# cloud
spring-cloud-config-server = { group = "org.springframework.cloud", name = "spring-cloud-config-server", version.ref = "spring-cloud" }
spring-cloud-starter-config = { group = "org.springframework.cloud", name = "spring-cloud-starter-config", version.ref = "spring-cloud" }
spring-cloud-bootstrap = { group = "org.springframework.cloud", name = "spring-cloud-starter-bootstrap", version = "4.2.1" }

# serialization
gson = { group = "com.google.code.gson", name = "gson", version = "2.10.1" }
jackson-module-kotlin = { group = "com.fasterxml.jackson.module", name = "jackson-module-kotlin" }

[plugins]
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-serialization = { id ="org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
jmh = { id = "me.champeau.gradle.jmh", version = "jmh-plugin" }


[bundles]
plugins = [
    "kotlin-jvm",
    "kotlin-serialization",
    "kotlin-spring",
    "kotlin-allopen",
    "jmh",
    "dependency-managment",
    "spring-boot",
    "hibernate"
]

spring = [
    "spring-boot-configuration-processor",
    "spring-boot-starter-actuator",
    "micrometr-registry-prometheus",
    "spring-boot-startet-data-jpa",
    "spring-boot-starter-data-redis",
    "spring-data-envers",
    "liquibase-core",
    "postgresql",
    "spring-boot-starter-quartz",
    "spring-boot-starter-kafka",
    "spring-boot-starter-web",
    "spring-boot-starter-test",
    "spring-kafka-test",
    "spring-boot-docker-compose",
    "spring-boot-devtools",
]

spring-cloud = [
    "spring-cloud-config-server",
    "spring-cloud-starter-config",
]